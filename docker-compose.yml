version: '3.8'

services:

  s_jenkins:
    container_name: Jenkins
    image: girayvardal/jenkinswithdocker
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins_data:/var/jenkins_home

  s_consul:
    container_name: Consul
    image: consul:1.15.4
    ports:
      - 8500:8500
      - 8600:8600/tcp
      - 8600:8600/udp
  
  s_pgAdmin:
    container_name: pgAdmin
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=SuperSecret
    ports:
      - 8888:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - postgre
    

  s_postgresql:
    container_name: PostgreSql
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    expose:
      - 5432
    volumes: 
      - db:/var/lib/postgresql/data
    networks:
      - postgre

  s_mssql:
    container_name: MsSQLServer
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
    - "5001:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Gv973041*
    networks:
      - postgre

  hangfireserver:
    container_name: HangfireServer
    image: ${DOCKER_REGISTRY-}hangfireserver
    build:
      context: .
      dockerfile: SystemManagement/HangfireServer/Dockerfile
    depends_on:
      - s_mssql
    networks:
      - postgre
    ports:
      - 5000:80

  projectmanagement_api:
    container_name: ProjectManagement_ApiService
    image: ${DOCKER_REGISTRY-}projectmanagementapi
    build:
      context: .
      dockerfile: ApiManagement/ProjectManagement_Api/Dockerfile
    ports:
     - 5002:80


networks:
  postgre:


volumes:
  db:
    driver: local
  pgadmin-data:
  jenkins_data:




